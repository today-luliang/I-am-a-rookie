Python 3.7.1 (v3.7.1:260ec2c36a, Oct 20 2018, 14:57:15) [MSC v.1915 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
>>> ages = {
	"Peter": 10,
	"Isabel": 11,
	"Anna": 9,
	"Thomas": 10,
	"Bob": 10,
	"Joseph": 11,
	"Maria": 12,
	"Gabeirl": 10,
	}
>>> len(ages)
8
>>> def average(dict):
	for name, age in ages.items():
		ave = sum(print(age))/len(ages)
		return ave

	
>>> average(ages)
10
Traceback (most recent call last):
  File "<pyshell#4>", line 1, in <module>
    average(ages)
  File "<pyshell#3>", line 3, in average
    ave = sum(print(age))/len(ages)
TypeError: 'NoneType' object is not iterable
>>>  def find_theoldest(ages):
	maxage = 0
	oldestname = ''
	for name, age in ages.items():
		if age > maxage:
			maxage = age
			oldestname = name
	return oldestname
SyntaxError: unexpected indent
>>> def find_theoldest(ages):
	maxage = 0
	oldestname = ''
	for name, age in ages.items():
		if age > maxage:
			maxage = age
			oldestname = name
	return oldestname

>>> find_theoldest(ages)
'Maria'
>>> def new_ages(ages,n):
	new_ages = {}
	for name, age in ages.items():
		age = n
		new_ages[name] = n
	return new_ages

>>> new_ages(ages,10)
{'Peter': 10, 'Isabel': 10, 'Anna': 10, 'Thomas': 10, 'Bob': 10, 'Joseph': 10, 'Maria': 10, 'Gabeirl': 10}
>>> #        字典
>>> students = {
	"Peter": {"age": 10, "address": "Lisbon"},
	"Isabel":{"age": 11, "address": "Sesimbra"},
	"Anna": {"age": 9, "address": "Lisbon"},
	}
>>> len(students)
3
>>> def ave_age(students):
	for age in students.items():
		sum(print(age))/len(students)

		
>>> ave_age(students)
('Peter', {'age': 10, 'address': 'Lisbon'})
Traceback (most recent call last):
  File "<pyshell#20>", line 1, in <module>
    ave_age(students)
  File "<pyshell#19>", line 3, in ave_age
    sum(print(age))/len(students)
TypeError: 'NoneType' object is not iterable
>>> #        子字典
